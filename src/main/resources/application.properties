## H2 CONFIG - DESCOMENTAR SOMENTE SE FOR USAR APENAS H2
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2
#
## Datasource
#spring.datasource.url=jdbc:h2:mem:coder-bank-cliente
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.jpa.hibernate.ddl-auto=update

# MYSQL CONFIG
spring.datasource.url=jdbc:mysql://localhost:3307/coder_bank_cliente?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

#evita que aparecam algumas mensagens de avisos no log. O spring tenta recuperar
#alguns metadados do banco de dados, não consegue encontrar e gera um aviso.
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#Kafka
# Broker do kafka que vamos usar
spring.kafka.producer.bootstrap-servers=127.0.0.1:29092
#Tipo de serialização de dados (converte do java para bytes e envia para o kafka)
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#A chave garante que as mensagens serão enviadas para uma mesma particao, com isso é possível garantir
# que as mensagens sejam consumidas de maneira ordenada
#converte a chave em bytes e envia para o lkafka
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer